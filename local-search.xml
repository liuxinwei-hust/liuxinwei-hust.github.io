<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>C++令牌桶</title>
    <link href="/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/"/>
    <url>/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="限流"><a href="#限流" class="headerlink" title="限流"></a>限流</h1><p>最近做个benchmark工具往服务端压测数据，由于服务端的承载能力优先，需要限流进行平滑压测。打算使用令牌桶进行限流。 令牌桶算法以一个设定的速率产生令牌并放入令牌桶，每次用户请求都得申请令牌，如果令牌不足，则拒绝请求。</p><h1 id="令牌桶"><a href="#令牌桶" class="headerlink" title="令牌桶"></a>令牌桶</h1><p>令牌桶算法中新请求到来时会从桶里拿走一个令牌，如果桶内没有令牌可拿，就拒绝服务。当然，令牌的数量也是有上限的。令牌的数量与时间和发放速率强相关，时间流逝的时间越长，会不断往桶里加入越多的令牌，如果令牌发放的速度比申请速度快，令牌桶会放满令牌，直到令牌占满整个令牌桶，如图所示。</p><p><img src="/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/1.png" alt="令牌桶"></p><p>令牌桶限流大致的规则如下：</p><ol><li>进水口按照某个速度，向桶中放入令牌。</li><li>令牌的容量是固定的，但是放行的速度不是固定的，只要桶中还有剩余令牌，一旦请求过来就能申请成功，然后放行。</li><li>如果令牌的发放速度，慢于请求到来速度，桶内就无牌可领，请求就会被拒绝。</li></ol><p>总之，令牌的发送速率可以设置，从而可以对突发的出口流量进行有效的应对。</p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><p>比如压测QPS是10000</p><ol><li>那我们设置令牌总数为10000</li><li>每次发送时获取令牌,获取令牌失败，不可发送；获取成功，则令牌总数–</li><li>每秒重置令牌总数为10000</li></ol><p>这样实现的是个最简单的令牌桶，但是这个令牌桶有个缺陷，如果发送请求不怎么耗时，那么客户端可能在1s的头1ms就将令牌耗尽，后面999ms没有令牌可用，仍然会造成后端流量的不平滑</p><p><img src="/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/2.jpg" alt="不到1s令牌耗尽"></p><h1 id="算法改进1"><a href="#算法改进1" class="headerlink" title="算法改进1"></a>算法改进1</h1><p>1s的时间间隔太久，我们可以将1s按1ms的窗口进行切割<br>比如压测QPS是10000</p><ol><li>将1s按1ms进行切割，1s分成1000个窗口，每个窗口的令牌数10个</li><li>每次发送时，获取令牌,获取令牌失败，不可发送；获取成功，则令牌总数–</li><li>每过1ms，令牌总数加10</li></ol><p><img src="/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/3.jpg" alt="平滑发送"></p><h1 id="算法改进2"><a href="#算法改进2" class="headerlink" title="算法改进2"></a>算法改进2</h1><p>上面的算法有两个问题：</p><ol><li>如果设置的qps &lt; 1000, 1000个窗口，每个窗口不足1个令牌</li><li>如果设置的qps 是1999呢，除以1000个窗口等于1，余数却有999,每个窗口的令牌是1还是2呢？</li></ol><p>改进：</p><ol><li>如果qps小于等于1000，则将窗口数量设置为qps的大小，每个窗口一个令牌</li><li>如果qps &gt; 1000, 这里的策略是多发，比如1999除以1000个窗口,余数不为0,则先定每个窗口发送2个，同时也要记录已使用的令牌总数，保证1s的令牌总数不超过1999，这样即保证了平滑发送，也不会超过总数</li></ol><h1 id="单线程实现"><a href="#单线程实现" class="headerlink" title="单线程实现"></a>单线程实现</h1><p>实现结果：<br>qps设置为1999：<br><img src="/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/3.png" alt="qps限制"><br>1000个窗口，前999个每个窗口2个令牌，最后一个是1个令牌<br><img src="/2024/03/27/C-%E4%BB%A4%E7%89%8C%E6%A1%B6/4.png" alt="每个窗口的令牌数"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">define</span> DEFAULT_WIN_SIZE 1000</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Controller</span> &#123;<br> <span class="hljs-keyword">public</span>:<br>  <span class="hljs-built_in">Controller</span>() &#123;&#125;<br>  ~<span class="hljs-built_in">Controller</span>() &#123;&#125;<br><br>  <span class="hljs-comment">// 获取令牌</span><br>  <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">CanSend</span><span class="hljs-params">(<span class="hljs-type">int64_t</span> cur_us)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (cur_us &gt;= m_win_begin_us_ + <span class="hljs-number">1000000LL</span>) &#123;<br>      <span class="hljs-built_in">Reset</span>(cur_us);<br>    &#125;<br><br>    <span class="hljs-comment">// 每个窗口大小 = 1000000LL / m_win_size_</span><br>    <span class="hljs-comment">// 当前落的窗口 = (cur_us - m_win_begin_us_) / 每个窗口大小</span><br>    <span class="hljs-type">int64_t</span> idx = (cur_us - m_win_begin_us_) * (<span class="hljs-type">int64_t</span>)m_win_size_ / <span class="hljs-number">1000000LL</span>;<br>    <span class="hljs-keyword">if</span> (idx &gt;= (<span class="hljs-type">int64_t</span>)m_win_size_ || idx &lt; <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// 切换了窗口</span><br>    <span class="hljs-keyword">if</span> (idx != m_cur_win_idx_) &#123;<br>      m_cur_win_idx_ = idx;<br>      <span class="hljs-type">int32_t</span> left_token = m_speed_ - m_used_token_;<br>      <span class="hljs-type">int32_t</span> left_win_size = m_win_size_ - m_cur_win_idx_;<br>      m_cur_token_ = left_token / left_win_size;<br>      <span class="hljs-keyword">if</span> (left_token % left_win_size != <span class="hljs-number">0</span>) &#123;<br>        m_cur_token_++;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 令牌不足</span><br>    <span class="hljs-keyword">if</span> (m_cur_token_ &lt;= <span class="hljs-number">0</span> || m_used_token_ &gt;= m_speed_) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-comment">// success</span><br>    m_cur_token_--;<br>    m_used_token_++;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  &#125;<br><br>  <span class="hljs-comment">// 设置qps，方便在运行过程中调整qps</span><br>  <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetSpeed</span><span class="hljs-params">(<span class="hljs-type">int32_t</span> speed, <span class="hljs-type">int64_t</span> cur_us)</span> </span>&#123;<br>    m_speed_ = speed;<br>    <span class="hljs-keyword">if</span> (m_speed_ &lt;= DEFAULT_WIN_SIZE) &#123;<br>      m_win_size_ = m_speed_;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      m_win_size_ = DEFAULT_WIN_SIZE;<br>    &#125;<br>    <span class="hljs-built_in">Reset</span>(cur_us);<br>  &#125;<br><br> <span class="hljs-keyword">private</span>:<br>  <span class="hljs-comment">// 每s重置令牌桶,重划窗口</span><br>  <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Reset</span><span class="hljs-params">(<span class="hljs-type">int64_t</span> cur_us)</span> </span>&#123;<br>    m_win_begin_us_ = cur_us;<br>    m_cur_win_idx_ = <span class="hljs-number">0</span>;<br>    m_used_token_ = <span class="hljs-number">0</span>;<br>    m_cur_token_ = m_speed_ / m_win_size_;<br>    <span class="hljs-keyword">if</span> (m_speed_ % m_win_size_ != <span class="hljs-number">0</span>) &#123;<br>      m_cur_token_++;<br>    &#125;<br>  &#125;<br><br> <span class="hljs-keyword">private</span>:<br>  <span class="hljs-type">int32_t</span> m_speed_;       <span class="hljs-comment">// 配置的qps</span><br>  <span class="hljs-type">int32_t</span> m_cur_token_;   <span class="hljs-comment">// 当前可用令牌数</span><br>  <span class="hljs-type">int32_t</span> m_used_token_;  <span class="hljs-comment">//  已使用的令牌数</span><br><br>  <span class="hljs-type">int64_t</span> m_win_begin_us_ = <span class="hljs-number">0</span>;  <span class="hljs-comment">// 窗口开始时间</span><br>  <span class="hljs-type">int32_t</span> m_cur_win_idx_;       <span class="hljs-comment">// 当前在的窗口编号</span><br>  <span class="hljs-type">int32_t</span> m_win_size_;          <span class="hljs-comment">// 1s分多少个窗口</span><br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C++代码库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
      <tag>C++</tag>
      
      <tag>benchmark</tag>
      
      <tag>令牌桶</tag>
      
      <tag>压测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2024/03/26/test/"/>
    <url>/2024/03/26/test/</url>
    
    <content type="html"><![CDATA[<p>test page </p><p><img src="/2024/03/26/test/1.png" alt="图片引用"></p>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/26/hello-world/"/>
    <url>/2024/03/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
